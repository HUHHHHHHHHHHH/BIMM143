---
title: "Class 8"
author: "Charlie Rezanka (A15837296)"
format: html
---


# Breast Cancer Project

Today we are going to explore some breast cancer data from the University of Wisconsin 

```{r}
wisc.data <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.data)
```


> Q. How many patient samples are in this dataset?

```{r}
nrow(wisc.data)

```
There are `r nrow(wisc.data)` patients in this dataset.



> Q. How many patients have malignant tumors?

```{r}
table(wisc.data$diagnosis)
```
There are `r table(wisc.data$diagnosis)` with malignant tumors. 


Save the diagnosis for later use as a reference to comapare how well we do with PCA etc. 


```{r}
diagnosis <- as.factor(wisc.data$diagnosis)
#diagnosis
```


Now exclude the diagnosis column from the data.

```{r}
wisc <- wisc.data[,-1]
head(wisc) #in class we plotted the whole wisc dataset, but I changed it to head(wisc) when rednering because it drops a ridiculous amount of data into the PDF otherwise
```


> Q. How many "dimensions", "variables", "columns" are present in the dataset? 

```{r}
ncol(wisc)
```
There are `r ncol(wisc)` dimensions in the dataset. 




# Principal Component Analysis

To perform PCA in R we can use the `prcomp()` function, it takes as input a numeric dataset and an optional `scale=FALSE/TRUE` argumemt. 

We generally always want to set `scale=TRUE` but lets make sure by checking if the mean and standard deviation values are different accross these 30 columns. 

```{r}
round(colMeans(wisc))
```


```{r}
pca <- prcomp(wisc, scale=TRUE)
summary(pca)
```


```{r}
attributes(pca)
```


```{r}
plot(pca$x[,1], pca$x[,2], col=diagnosis)
#Red points are malignant, black are red.
```


```{r}
library(ggplot2)

x <- as.data.frame(pca$x)

ggplot(x) + 
  aes(PC1, PC2, col=diagnosis) +
  geom_point()
#PC1 is the component describing the most variation, PC2 describes the component with the 2nd most variation
```


> Q. How much variance is captured in the top 3 PCs?

The top 3 PCs caputure 73% of the total variance. 


> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.


```{r}
pca$rotation["concave.points_mean",1]
```


```{r}
attributes(pca)
```




# Combine PCA results with clustering 

We can use our new PCA variables (i.e. the scores along with the PCs contained in t `pca$x)` as input for other methods such as clustering. 

```{r}
#Hclust needs a distance matrix as input and a method
d <- dist(pca$x[,1:3])

hc <- hclust(d, method="ward.D2")
plot(hc)
```


To get our cluster membership vector we can use the `cutree()` function and specify a height (`h`) or number of groups (`k`).


```{r}
grps <- cutree(hc, h=80, k=2)
table(grps)
```


I want to find out how many diagnosis "M" amd "B" are in ech grp? 


```{r}
table(diagnosis, grps)
```

Group 1 has 179 patients with malignant tumors, group 2 has 33. 



We cna also plo our results using our clustering vector `grps`.


```{r}
plot(pca$x[,1], pca$x[,2], col=grps)
```


```{r}
library(ggplot2)

x <- as.data.frame(pca$x)

ggplot(x) + 
  aes(PC1, PC2) +
  geom_point(col=grps)
#overlap between red and black points due to unplotted 3rd dimension
```


> Q15. What is the specificity and sensitivity of our curent results? 

The sensitivity of our current clustering is:
```{r}
179/(179+24)
```

The specificity of our current clustering is:
```{r}
333/(333+33)
```




# Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(pca, newdata=new)
npc
```


```{r}
plot(pca$x[,1:2], col=diagnosis)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```



> Q16. Which of these new patients should we prioritize for follow up based on your results?

We should prioritize patient 2, as they are statstically more likely to be a true positive diagnosis based on their variation relative to other malignant cancer patients. 






